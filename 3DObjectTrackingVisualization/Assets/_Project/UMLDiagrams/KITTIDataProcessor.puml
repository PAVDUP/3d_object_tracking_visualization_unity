@startuml
!define RECTANGLE class

RECTANGLE DataType.BoundingBox3D {
  +Center: Vector3
  +Size: Vector3
  +Rotation: Quaternion
  +BoundingBox3D(Vector3, Vector3, Quaternion)
  +RotationFromYaw(float): Quaternion
}

RECTANGLE DataType.CalibrationData {
  +CameraMatrix: Matrix4x4
  +ProjectionMatrix: Matrix4x4
  +RectificationMatrix: Matrix4x4
  +TrVeloToCam: Matrix4x4
  +CalibrationData(Matrix4x4, Matrix4x4, Matrix4x4, Matrix4x4)
  +ParseMatrix(string): Matrix4x4
}

RECTANGLE Utils.KITTIDataUtil {
  +{static} ParseCalibration(string[]): CalibrationData
  +{static} TransformBoundingBox(BoundingBox3D, Matrix4x4): BoundingBox3D
  +{static} RotationFromYaw(float): Quaternion
}

RECTANGLE VisualizeModule.BoundingBox3DVisualizer {
  +boundingBoxMaterial: Material
  +VisualizeBoundingBoxes(List<BoundingBox3D>): void
}

abstract class RawDataProcessor {
  +updateInterval: float
  +LastUpdateTime: float
  +onBoundingBoxProcessed: UnityEvent<List<BoundingBox3D>>
}

class KITTIRawDataProcessor {
  +_calibrationData: CalibrationData
  +_dataFilesQueue: Queue<(string, string)>
}

class OnDeviceRawDataProcessor {
  +useLocal: bool;
  -_rawDataFilePath: string
  -_tcpListener: TcpListener
  -_tcpClient: TcpClient 
}

class UnityVisualizeManager {
  +rawDataProcessor: RawDataProcessor
  +boundingBox3DVisualizer: BoundingBox3DVisualizer
}

class ClassificationPrefabs {
  +classificationPrefabs: ClassificationPrefab[]
}

class ClassificationPrefab {
  +classificationType: BoundingBox3DType
  +classificationPrefabCandidates: GameObject[]
}

RawDataProcessor <|-- OnDeviceRawDataProcessor
RawDataProcessor <|-- KITTIRawDataProcessor
UnityVisualizeManager --> RawDataProcessor: uses
UnityVisualizeManager --> VisualizeModule.BoundingBox3DVisualizer: uses
UnityVisualizeManager *-- ClassificationPrefabs: composite
ClassificationPrefabs *-- ClassificationPrefab: composite

@enduml